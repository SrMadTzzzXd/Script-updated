-- Servicios principales
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local CoreGui = game:GetService("CoreGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local ATMModule = require(ReplicatedStorage.Modules.Game.ATM.ATM)

-- Estado y control
local antikillEnabled = false
local espEnabled = false
local evading = false
local currentEvasionThread = nil

-- 🧼 Cancelar evasión anterior al respawn
player.CharacterAdded:Connect(function(char)
    evading = false
    if currentEvasionThread then
        task.cancel(currentEvasionThread)
        currentEvasionThread = nil
    end

    -- Asegura que el humanoid esté cargado
    local humanoid = char:WaitForChild("Humanoid", 5)
    if humanoid and humanoid.Health > 30 then
        print("👤 Nuevo personaje cargado con salud suficiente. Evasión desactivada.")
    end
end)

-- 🛡️ Loop de evasión automática
RunService.RenderStepped:Connect(function()
    if not antikillEnabled then return end

    local character = player.Character
    if not character then return end

    local humanoid = character:FindFirstChildWhichIsA("Humanoid")
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not humanoid or not hrp then return end

    if humanoid.Health <= 16 and not evading then
        evading = true
        print("🛡️ Activando evasión con mayor elevación...")

        local originPosition = hrp.Position
        local elevatedHeight = originPosition.Y + 10

        currentEvasionThread = task.spawn(function()
            while humanoid and humanoid.Health < 30 and antikillEnabled do
                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then break end

                local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                local randomOffset = Vector3.new(math.random(-40, 40), 0, math.random(-40, 40))
                local targetPosition = originPosition + randomOffset
                local moveDirection = (targetPosition - hrp.Position).Unit
                local moveDistance = math.random(10, 25)

                hrp.Velocity = moveDirection * moveDistance * 10
                hrp.CFrame = CFrame.new(hrp.Position.X, elevatedHeight, hrp.Position.Z)
                task.wait(0.05)
            end

            print("🟢 Salud restaurada o evasión finalizada.")
            evading = false
            currentEvasionThread = nil
        end)
    end
end)

-- 🔍 ATM ESP Mejorado
local function updateHighlight(model, isActive)
    local id = "ATMESP_" .. model:GetDebugId()
    local existing = CoreGui:FindFirstChild(id)
    if not existing then
        local highlight = Instance.new("Highlight")
        highlight.Name = id
        highlight.Adornee = model
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        highlight.OutlineTransparency = 0
        highlight.Parent = CoreGui
        existing = highlight
    end

    existing.FillColor = isActive and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    existing.FillTransparency = 0.5
end

local function clearESP()
    for _, obj in ipairs(CoreGui:GetChildren()) do
        if obj:IsA("Highlight") and obj.Name:match("^ATMESP_") then
            obj:Destroy()
        end
    end
end

local function drawESP()
    if not espEnabled then
        clearESP()
        return
    end

    for _, atm in ipairs(Workspace.Map.Props:GetChildren()) do
        if atm.Name == "ATM" then
            local isActive = false
            for _, obj in ATMModule.class.objects do
                if obj.instance == atm then
                    isActive = not obj.states.disabled:get()
                    break
                end
            end
            updateHighlight(atm, isActive)
        end
    end
end

-- Ejecutar ESP por frame
RunService.RenderStepped:Connect(function()
    pcall(drawESP)
end)

-- UI - HydraHub
local UILib = loadstring(game:HttpGet('https://raw.githubusercontent.com/StepBroFurious/Script/main/HydraHubUi.lua'))()
local Window = UILib.new("Grand Piece Online", player.UserId, "Buyer")

-- UI draggable
if Window and Window._ScreenGui and Window._ScreenGui:FindFirstChildOfClass("Frame") then
    local frame = Window._ScreenGui:FindFirstChildOfClass("Frame")
    frame.Active = true
    frame.Draggable = true
end

-- Categorías y pestañas
local Category1 = Window:Category("Main", "http://www.roblox.com/asset/?id=8395621517")

-- 🛡️ AntiKill Section
local AntiKillTab = Category1:Button("AntiKill", "http://www.roblox.com/asset/?id=8395747586")
local AntiKillSection = AntiKillTab:Section("Auto Evasion", "Left")

AntiKillSection:Toggle({
    Title = "AntiKill",
    Description = "Activa evasión automática cuando tu vida esté baja.",
    Default = false
}, function(value)
    antikillEnabled = value
    print("🔘 AntiKill activado:", antikillEnabled)
end)

-- 🔍 ESP Section
local ESPTab = Category1:Button("ATM ESP", "http://www.roblox.com/asset/?id=8395747586")
local ESPSection = ESPTab:Section("ATM Visuals", "Left")

ESPSection:Toggle({
    Title = "ATM ESP",
    Description = "Muestra los ATMs activos en verde y los inactivos en rojo.",
    Default = false
}, function(value)
    espEnabled = value
    if not value then
        clearESP()
    end
    print("🔘 ATM ESP activado:", espEnabled)
end)

-- 🔧 Misc Section
local MiscTab = Category1:Button("Misc", "http://www.roblox.com/asset/?id=8395747586")
local MiscSection = MiscTab:Section("Extras", "Left")
